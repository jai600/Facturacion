@model Facturacion.Models.Facturas

@{
    Layout = "~/Views/Shared/_Layout.cshtml"; // Ruta al layout
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>FormFacturas</title>

    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
    <script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


    <script>

        var contador = 1;
        var subtotal = 0;
        var productosDetalle = 0;
        var DetalleExistente = 0;

       
        $(document).ready(function () {
            
            // Contamos los detalles de la factura almacenados         
            $("#tablaDetalles > tbody > tr").each(function (i, tr) {

                DetalleExistente++;

            })

            //Calculamos el valor del iva y lo sumamos al total
            $("#Iva").on("change", function () {
                var subtotal = $("#Subtotal").val();
                var iva = $(this).val();
                var Descuento = $("#TotalDescuento").val();
                var calculo = calcularIva(subtotal, iva);
                var total = subtotal;
                $("#TotalImpuesto").val(calculo);
                if (!isNaN(Descuento)) {
                    total = parseFloat(total) + parseFloat(calculo) - parseFloat(Descuento);
                } else {
                    total = parseFloat(total) + parseFloat(calculo);
                }

                $("#Total").val(total);
            });

            //Calculamos el valor del descuento y lo sumamos al total
            $("#Descuento").on("change", function () {
                debugger
                var subtotal = $("#Subtotal").val();
                var Desc = $(this).val();
                var Impuesto = $("#TotalImpuesto").val();
                var calculo = calculoDescuento(subtotal, Desc);
                var total = subtotal;
                $("#TotalDescuento").val(calculo);
                if (!isNaN(Impuesto)) {
                    total = parseFloat(total) + parseFloat(Impuesto) - parseFloat(calculo);
                } else {
                    total = parseFloat(total) - parseFloat(calculo);
                }

                $("#Total").val(total);

            });

            // Agregar detalle 
            $('#agregarDetalle').click(function () {
                
                var control = false;

                // Validamos los 3 campos que esten llenos
                control = ResaltarCampo("#IdProducto", control);
                control = ResaltarCampo("#Cantidad", control);
                control = ResaltarCampo("#PrecioUnitario", control);

                //Control por campos vacios
                if (control) {
                    Swal.fire('¡Advertencia!', 'Completa los campos!', 'warning');
                    return;
                }

                //Validamos que la cantidad sea positiva
                var controlCantidadPositiva = validarCampoPositivo("#Cantidad");
                if (!controlCantidadPositiva) {
                    Swal.fire('¡Advertencia!', 'Debes ingresar una cantidad mayor a 0 !', 'warning');
                    return
                }

                //Validamos que el precio unitario no sea negativo
                var controlNoNegativoPrecio = validarCampoNoNegativo("#PrecioUnitario");
                if (!controlNoNegativoPrecio) {
                    Swal.fire('¡Advertencia!', 'El precio Unitario no puede ser negativo!', 'warning');
                    return
                }
                //Calculamos el subtotal
                var PrecioU = $("#PrecioUnitario").val();
                var CantidadU = $("#Cantidad").val();
                subtotal = parseFloat(subtotal) + (parseFloat(PrecioU) * parseInt(CantidadU));


                //Buscamos si existe idFactura esto para verificar en caso sea modificar factura sumamos el total almacenado con los nuevos productos agregados
                var buscarIdFactura = $("#idFactura").val();
                if (buscarIdFactura != 0) {
                    var valorTotal = ReemplazarComaPuntoSimple($("#Subtotal").val());
                    subtotal = parseFloat(subtotal) + parseFloat(valorTotal);
                }

                $("#Subtotal").val(subtotal);
                $("#Total").val(subtotal);

                //Validamos los valores de porcentajes que esten correctamente calculados con el llamado de esta funcion
                validarPorcentajes();
               

                //Agregamos el registro del producto a la tablaDetalles
                $("#tablaDetalles tbody").append(

                    $("<tr>").append(
                        $("<td>").text($("#IdProducto").val()),
                        $("<td>").text($("#Cantidad").val()),
                        $("<td>").text($("#PrecioUnitario").val()),
                        $("<td>").html("<button class='btn btn-danger quitarDetalle'>-</button>"),
                    )

                )

                //Incrementamos el contadore de detalles agregados
                productosDetalle++;

                //QUitamos el resalto de campos en rojo por validacion en caso esten en rojo.
                control = ResaltarCampo("#IdProducto", control);
                control = ResaltarCampo("#Cantidad", control);
                control = ResaltarCampo("#PrecioUnitario", control);

                //limpiamos los campos agregados a detalle
                $("#IdProducto").val("")
                $("#Cantidad").val("")
                $("#PrecioUnitario").val("")
            });

            // Quitar detalle al hacer clic en el botón "-"
            $('#tablaDetalles').on('click', '.quitarDetalle', function () {


                //Se realizan los ajustes de los totales correspondientes, en caso se quiten de la lista de detalles registros
                var precioUnitario = $(this).closest('tr').find('td:eq(2)').text();
                var cantidad = $(this).closest('tr').find('td:eq(1)').text();
                subtotal = parseInt(subtotal) - (parseFloat(precioUnitario) * parseInt(cantidad));
                $("#Subtotal").val(subtotal);
                $("#Total").val(subtotal);
                $(this).closest('tr').remove();
                validarPorcentajes();
                productosDetalle--;

            });

            //Funcion para guardar la factura
            $("#BtnGuardaFactura").on("click", function () {
                var control = false;
                var controlCamposDetalle = false
                var Detallesv = []
                var total = 0;
                var contador = 1;

                //Se leeran los datos del detalle agregados nuevos para la informacion almacenar en caso existan registros agregados
                if (productosDetalle > 0) {
                    $("#tablaDetalles > tbody > tr").each(function (i, tr) {                       
                        //Se establece un contador para excluir registros del detalle en la opcion de editar factura  ya alamcenadas
                        if (contador > DetalleExistente) {

                            Detallesv.push(
                                {
                                    idProducto: $(tr).find('td:eq(0)').text(),
                                    Cantidad: $(tr).find('td:eq(1)').text(),
                                    PrecioUnitario: ReemplazarComaPuntoSimple($(tr).find('td:eq(2)').text()), 
                                }
                            )
                        }
                        contador++;
                    })
                }
               
                //Se quitan los resaltos de los campos de detalle de producto por validar los campos principales de la factura
                QuitarResaltarCampo("#IdProducto");
                QuitarResaltarCampo("#Cantidad");
                QuitarResaltarCampo("#PrecioUnitario");

                control = ResaltarCampo("#NumeroFactura", control);
                control = ResaltarCampo("#Fecha", control);
                control = ResaltarCampo("#TipodePago", control);
                control = ResaltarCampo("#DocumentoCliente", control);
                control = ResaltarCampo("#NombreCliente", control);
                control = ResaltarCampo("#Descuento", control);
                control = ResaltarCampo("#Iva", control);


                if (control) {
                    Swal.fire('¡Advertencia!', 'Completa los campos', 'warning');
                    return;
                }
                var buscarIdFactura = $("#idFactura").val();

                //Se valida antes de guardar si se han agregado productos a la tabla de detalles, si es modificacion de factura, validara los almacenados
                var controlProductos = $("#Subtotal").val();
                if (productosDetalle <= 0 && buscarIdFactura == 0) {
                    Swal.fire('¡Advertencia!', 'Debes agregar al menos un producto', 'warning');
                    return
                }

                //Validamos que la fecha sea mayor o igual al dia.
                var controlFecha = validarFecha("#Fecha");

                if (!controlFecha) {
                    Swal.fire('¡Advertencia!', 'Debes ingresar una fecha mayor o igual al día', 'warning');
                    return
                }
             
                //Accion 1 Guardar
                var accion = 1;

                //Verificamos si la vista carga en modo Edicion de factura si el idFactura del modelo es disitinto a 0, se aplizara como modificacion de factura.
                if (buscarIdFactura !=0)
                    accion = 2;

                //Reeplazamos las comas por puntos de las cadena de texto.
                var SubtotalV = ReemplazarComaPunto("#Subtotal");
                var TotalDescuentoV = ReemplazarComaPunto("#TotalDescuento");
                var TotalImpuestoV = ReemplazarComaPunto("#TotalImpuesto");
                var TotalV = ReemplazarComaPunto("#Total");
             
                //Objeto Fact que tendra la informacion a guardar o actualizar de la factura segun sea la operacion  
                var Fact = {
                    idFactura: buscarIdFactura,
                    FacturaV: {
                        idFactura: $("#idFactura").val(),
                        NumeroFactura: $("#NumeroFactura").val(),
                        Fecha: $("#Fecha").val(),
                        TipodePago: $("#TipodePago").val(),
                        DocumentoCliente: $("#DocumentoCliente").val(),
                        NombreCliente: $("#NombreCliente").val(),
                        Subtotal: SubtotalV,
                        Descuento: $("#Descuento").val(),
                        Iva: $("#Iva").val(),
                        TotalDescuento: TotalDescuentoV,
                        TotalImpuesto: TotalImpuestoV,
                        Total: TotalV,


                    },
                    DetallesV: Detallesv
                }

           
                //Ajax para enviar la solicitud a servidor con metodo post y guardar los datos de factura
                jQuery.ajax({
                    url: '@Url.Action("Guardar", "FacturaController1")',
                    type: "POST",
                    data: JSON.stringify(Fact),
                    datatype: "json",
                    contentType: "application/json; charset=utf-8",
                    success: function (data) {
                      
                            Swal.fire({
                                title: '¡Confirmación!',
                                text: data.respuesta,
                                icon: 'success',
                                showCancelButton: false, 
                                confirmButtonText: 'Aceptar'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                   
                                    window.location.href = '@Url.Action("Index", "FacturaController1")';
                                }
                            });
                      
                    },
                    Error: function (err) {
                        Swal.fire('¡Advertencia!', 'Se presento un error al guardar', 'error');
                        console.log(err.message)
                    }

                }) // Cierre de jquery Ajax


            }) //Cierre Guardar Factura

        }); //Cierre del cargado del documento

        //Funcion para reemplazar comas por puntos en un valor de cualquier input enviado
        function ReemplazarComaPunto(input) {

            var PuntoxComa = $(input).val();
            PuntoxComa = PuntoxComa.replace(",", ".");

            return PuntoxComa;
        }

        //Funcion para reemplazar comas por puntos en una cadena de texto directo
        function ReemplazarComaPuntoSimple(input) {
           
            var result = input.replace(",", ".");

            return result;
        }

        //Funcion para validar que la fecha no sea menor a la fecha del día
        function validarFecha(Ifecha) {
            var Fecha = $(Ifecha).val();

            // Obtener la fecha actual en formato YYYY-MM-DD
            var fechaActual = new Date().toISOString().split('T')[0];

            if (Fecha < fechaActual) {
                // La fecha ingresada es menor que la fecha actual
                $(Ifecha).css("border", "1px solid red");
                return false;

            }

            return true;
        }

        //Funcion para validar si el valor de un campo es mayor igual a 0
        function validarCampoPositivo(input) {
            var valor = $(input).val();

            if (valor <= 0) {
                $(input).css("border", "1px solid red");
                return false;
            }
            return true;
        }

        //Funcion para validar si el valor de un campo no sea negativo
        function validarCampoNoNegativo(input) {
            var valor = $(input).val();

            if (valor < 0) {
                $(input).css("border", "1px solid red");
                return false;
            }
            return true;
        }
     
        //Funcion para limpiar los campos
        function LimpiarCampos() {
            $("#NumeroFactura").val("");
            $("#Fecha").val("");
            $("#TipodePago").val("");
            $("#DocumentoCliente").val("");
            $("#NombreCliente").val("");
            $("#Subtotal").val(0);
            $("#Descuento").val(0);
            $("#Iva").val(0);
            $("#TotalDescuento").val(0);
            $("#TotalImpuesto").val(0);
            $("#Total").val(0);

            $("#tablaDetalles tbody").html("");
        }       

        //Funcion para resaltar los campos en rojo e indicar que campos requieren ser completados 
        function ResaltarCampo(campo, control) {
            debugger
            var bool = false;

            if (control)
                bool = true;

            var verificarDato = $(campo).val();
            if (verificarDato == null || verificarDato == "") {
                $(campo).css("border", "1px solid red");
                bool = true;

            } else {
                $(campo).css("border", "1px solid #CCC");
            }

            return bool;
        }

        //Funcion para quitar el resaltado en rojo de los campos que ya validan
        function QuitarResaltarCampo(campo) {

            $(campo).css("border", "1px solid #CCC");

        }

        //Funcion para validar solo numeros en los campos correspondientes
        function validarSoloNumeros(input) {
            // Obtenemos el valor actual del campo de entrada
            var inputValue = input.value;

            // Eliminamos cualquier carácter que no sea un número
            input.value = inputValue.replace(/[^0-9]/g, '');
        }

        //Funcion para calcular iva
        function calcularIva(subtotal, iva) {
            if (!isNaN(iva)) {
                var calculo = (parseFloat(subtotal) * parseInt(iva)) / 100;
                return calculo;
            } else {
                return 0; // Devuelve 0 si el valor no es un número válido
            }
        }

        //Funcion para calcular descuento
        function calculoDescuento(subtotal, Desc) {
            if (!isNaN(Desc)) {
                var calculo = (parseFloat(subtotal) * parseInt(Desc)) / 100;
                return calculo;
            } else {
                return 0; // Devuelve 0 si el valor no es un número válido
            }
        }

        //Funcion para validar que los calculos de iva y descuento se apliquen correctamente en los campos de totales
        function validarPorcentajes() {

            var subtotal = $("#Subtotal").val();
            var iva = $("#Iva").val();

            var calculo = calcularIva(subtotal, iva);
            var total = subtotal;
            $("#TotalImpuesto").val(calculo);
            total = parseFloat(total) + parseFloat(calculo);
            $("#Total").val(total);


            var subtotal = $("#Subtotal").val();
            var Desc = $("#Descuento").val()

            calculo = calculoDescuento(subtotal, Desc);
            $("#TotalDescuento").val(calculo);
            total = parseFloat(total) - parseFloat(calculo);
            $("#Total").val(total);
        }

    </script>
</head>
<body>

    <h1>Agregar Facturas</h1>
    <hr />

   @*  formulario para creacion y modificacion de facturas *@
    <div class="d-flex justify-content-center align-items-center" style="min-height: 100vh;">

        <div class="card-body">
            <div class="row">

                <input type="hidden" id="idFactura" value="@Model.idFactura" />
                <div class="col-sm-4">
                    <label for="NumeroFactura" class="control-label">NumeroFactura</label>

                    @* se verifica si se retornan datos de detalles en el modelo (Esto identifica si es modificacion de factura o guardar nueva)  *@
                    @{
                        if (ViewBag.ListaDetalles != null)
                        {
                                   <input id="NumeroFactura" class="form-control" value="@Model.NumeroFactura" oninput="validarSoloNumeros(this)" />
                        }else {
                                   <input id="NumeroFactura" class="form-control" value="" maxlength="10" oninput="validarSoloNumeros(this)" />
                        }
                    }
                    
                    <span for="NumeroFactura" class="text-danger"></span>
                </div>

                <div class="col-sm-4">
                    <label for="Fecha" class="control-label">Fecha</label>

                    @* se verifica si se retornan datos de detalles en el modelo (Esto identifica si es modificacion de factura o guardar nueva)  *@
                    @{
                        if (ViewBag.ListaDetalles != null)
                        {
                                                <input id="Fecha" type="date" class="form-control" value="@Model.Fecha.ToString("yyyy-MM-dd")" />
                        }else{
                                                <input id="Fecha" type="date" class="form-control" value="" />
                        }
                    }
                  
                    <span for="Fecha" class="text-danger"></span>
                </div>


                <div class="col-sm-4">
                    <label for="TipodePago" class="control-label">TipodePago</label>
                    @* <input id="TipodePago" class="form-control" value="@Model.TipodePago" maxlength="30" /> *@

                    <select class="form-control" id="TipodePago"> 
                        @{
                           
                            if(Model.TipodePago=="Contado")
                            {
                                <option value="Contado" selected>Contado</option>
                                <option value="Credito">Credito</option>
                            }
                            else if (Model.TipodePago == "Credito")
                            {
                                <option value="Contado">Contado</option>
                                <option value="Credito" selected>Credito</option>
                            }
                            else
                            {
                                <option value=""></option>
                                <option value="Contado">Contado</option>
                                <option value="Credito">Credito</option>
                            }
                        }
                       
                    </select>
                    <span for="TipodePago" class="text-danger"></span>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="DocumentoCliente" class="control-label">DocumentoCliente</label>
                        <input id="DocumentoCliente" class="form-control" value="@Model.DocumentoCliente" maxlength="20"/>
                        <span for="DocumentoCliente" class="text-danger"></span>
                    </div>
                </div>


                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="NombreCliente" class="control-label">NombreCliente</label>
                        <input id="NombreCliente" class="form-control" value="@Model.NombreCliente" maxlength="50" />
                        <span for="NombreCliente" class="text-danger"></span>
                    </div>
                </div>


                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="Subtotal" class="control-label">Subtotal</label>
                        <input id="Subtotal" readonly value="@Model.Subtotal" class="form-control" />
                        <span for="Subtotal" class="text-danger"></span>
                    </div>
                </div>

            </div>

            <div class="row">

                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="Descuento" class="control-label">Porcentaje Descuento %</label>
                        <input id="Descuento" maxlength="2" value="@Model.Descuento" oninput="validarSoloNumeros(this)" class="form-control numeros" />
                        <span for="Descuento" class="text-danger"></span>
                    </div>

                </div>

                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="Iva" class="control-label">Porcentaje Iva %</label>
                        <input id="Iva" class="form-control numeros" oninput="validarSoloNumeros(this)" value="@Model.Iva" maxlength="2" />
                        <span for="Iva" class="text-danger"></span>
                    </div>
                </div>


                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="TotalDescuento" class="control-label">TotalDescuento</label>
                        <input id="TotalDescuento" class="form-control" value="@Model.TotalDescuento" readonly />
                        <span for="TotalDescuento" class="text-danger"></span>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="TotalImpuesto" class="control-label">TotalImpuesto</label>
                        <input id="TotalImpuesto" class="form-control" value="@Model.TotalImpuesto" readonly />
                        <span for="TotalImpuesto" class="text-danger"></span>
                    </div>
                </div>


                <div class="col-sm-4">
                    <div class="form-group">
                        <label for="Total" class="control-label">Total</label>
                        <input id="Total" class="form-control" value="@Model.Total" readonly />
                        <span for="Total" class="text-danger"></span>
                    </div>
                </div>


                <div class="col-sm-4"></div>
            </div>



            <h1>Detalles de Factura</h1>

            <div class="container">
                <div class="row">

                    <div class="col-sm-3">
                        <div class="form-group">
                            <label for="IdProducto" class="control-label">IdProducto</label>

                             @* Lista de productos almacenados en la tabla productos  *@
                            <select id="IdProducto" class="form-control">
                                <option value=""></option>
                                @foreach (var producto in ViewBag.ListaPro as List<Productos>)
                                {
                                    <option value="@producto.idProducto">@producto.Producto</option>
                                }

                            </select>
                            <span for="IdProducto" class="text-danger"></span>
                        </div>
                    </div>



                    <div class="col-sm-3">
                        <div class="form-group">
                            <label for="Cantidad" class="control-label">Cantidad</label>
                            <input id="Cantidad" class="form-control numeros" oninput="validarSoloNumeros(this)" maxlength="10" />
                            <span for="Cantidad" class="text-danger"></span>
                        </div>
                    </div>



                    <div class="col-sm-3">
                        <div class="form-group">
                            <label for="PrecioUnitario" class="control-label">PrecioUnitario</label>
                            <input id="PrecioUnitario" class="form-control numeros" oninput="validarSoloNumeros(this)" maxlength="19" />
                            <span for="PrecioUnitario" class="text-danger"></span>
                        </div>
                    </div>

                    <div class="col-sm-3">
                        <input id="agregarDetalle" type="button" value="Agregar Producto" class="btn btn-success">
                    </div>




                </div>
            </div>




            <table id="tablaDetalles" class="table table-bordered">
                <thead>
                    <tr>
                        <th>Producto</th>
                        <th>Cantidad</th>
                        <th>Precio Unitario</th>                   
                        <th>Acciones</th>
                    </tr>
                </thead>
                <tbody>
                   
                   @*  En caso se determine que la lista de detalles trae información desde el servidor se imprimira 
                       (esto diferencia que es modificacion de factura y no guardado) 
                       si es guardado de factura cargara eb blanco la tabla de detalles
                    *@
                    
                    @{
                        if (ViewBag.ListaDetalles != null)
                        {
                             @foreach (var detallefactura in ViewBag.ListaDetalles as List<Detalles>)
                               {
                                     <tr>
                                        <td>@detallefactura.idProducto</td>
                                        <td>@detallefactura.Cantidad</td>
                                        <td>@detallefactura.PrecioUnitario</td>
                                        <td></td>
                                     </tr>
                               }
                        }

                    }

                </tbody>
            </table>

            <div class="form-group">

            @*     se determina si es modificacion o guardado para que aparezca el boton apropiado *@
                @{
                    if (ViewBag.ListaDetalles != null)
                    {
                        <button id="BtnGuardaFactura" class="btn btn-primary">Editar Factura</button>
                    }
                    else
                    {
                        <button id="BtnGuardaFactura" class="btn btn-primary">Guardar Factura</button>
                    }
                }
                   
            </div>


        </div>

    </div>

</body>

<br />

<br />
</html>
